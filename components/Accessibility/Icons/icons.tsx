import React from 'react';

export const LogoIcon = () => (
  <svg
    width="40"
    height="40"
    viewBox="0 0 100 100"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    aria-labelledby="logoTitle"
  >
    <title id="logoTitle">Logo</title>
    <g clipPath="url(#clip0_1208_27417)">
      <path
        d="M27.512 73.5372L27.512 28.512C27.512 27.9597 27.9597 27.512 28.512 27.512L70.4597 27.512C71.0229 27.512 71.475 27.9769 71.4593 28.54L70.8613 49.9176C70.8462 50.4588 70.4031 50.8896 69.8617 50.8896L50.7968 50.8896C49.891 50.8896 49.4519 51.9975 50.1117 52.618L92.25 92.25M92.25 92.25L48.2739 92.25L7.75002 92.25C7.19773 92.25 6.75002 91.8023 6.75002 91.25L6.75 7.75C6.75 7.19771 7.19772 6.75 7.75 6.75L91.25 6.75003C91.8023 6.75003 92.25 7.19775 92.25 7.75003L92.25 92.25Z"
        stroke="white"
        strokeWidth="8"
      />
    </g>
    <defs>
      <clipPath id="clip0_1208_27417">
        <rect width="100" height="100" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

export const UserIcon = ({ isUserHovered }: { isUserHovered: any }) => (
  <svg
    width="20"
    height="23"
    viewBox="0 0 20 23"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <title>user</title>
    <path
      d="M18 22C18 22.5523 18.4477 23 19 23C19.5523 23 20 22.5523 20 22H18ZM0 22C0 22.5523 0.447715 23 1 23C1.55228 23 2 22.5523 2 22H0ZM20 22C20 19.9375 18.7112 18.2049 16.9079 17.0361C15.0947 15.8609 12.6496 15.1667 10 15.1667V17.1667C12.321 17.1667 14.3759 17.7783 15.8201 18.7144C17.2741 19.6568 18 20.8409 18 22H20ZM10 15.1667C7.35039 15.1667 4.90531 15.8609 3.09214 17.0361C1.28877 18.2049 0 19.9375 0 22H2C2 20.8409 2.72595 19.6568 4.17993 18.7144C5.62413 17.7783 7.67904 17.1667 10 17.1667V15.1667ZM10 11.6667C7.47965 11.6667 5.375 9.5373 5.375 6.83333H3.375C3.375 10.5727 6.30715 13.6667 10 13.6667V11.6667ZM5.375 6.83333C5.375 4.12937 7.47965 2 10 2V0C6.30715 0 3.375 3.09398 3.375 6.83333H5.375ZM10 2C12.5204 2 14.625 4.12937 14.625 6.83333H16.625C16.625 3.09398 13.6929 0 10 0V2ZM14.625 6.83333C14.625 9.5373 12.5204 11.6667 10 11.6667V13.6667C13.6929 13.6667 16.625 10.5727 16.625 6.83333H14.625Z"
      fill={isUserHovered ? '#BFC0C1' : '#525456'}
    />
  </svg>
);

export const PlanetIcon = ({ isPlanetsHovered }: { isPlanetsHovered: any }) => (
  <svg
    width="32"
    height="33"
    viewBox="0 0 32 33"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <title>user</title>
    <path
      d="M20.4 15C20.4 17.4301 18.4301 19.4 16 19.4C13.5699 19.4 11.6 17.4301 11.6 15C11.6 12.5699 13.5699 10.6 16 10.6C18.4301 10.6 20.4 12.5699 20.4 15Z"
      fill={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      stroke={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isPlanetsHovered ? '1.6' : '1.2'}
    />
    <path
      d="M19.4 29.5C19.4 31.1016 18.1016 32.4 16.5 32.4C14.8984 32.4 13.6 31.1016 13.6 29.5C13.6 27.8984 14.8984 26.6 16.5 26.6C18.1016 26.6 19.4 27.8984 19.4 29.5Z"
      fill={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      stroke={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isPlanetsHovered ? '1.6' : '1.2'}
    />
    <path
      d="M31.4 8.5C31.4 10.1016 30.1016 11.4 28.5 11.4C26.8984 11.4 25.6 10.1016 25.6 8.5C25.6 6.89837 26.8984 5.6 28.5 5.6C30.1016 5.6 31.4 6.89837 31.4 8.5Z"
      fill={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      stroke={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isPlanetsHovered ? '1.6' : '1.2'}
    />
    <path
      d="M6.4 8.5C6.4 10.1016 5.10163 11.4 3.5 11.4C1.89837 11.4 0.6 10.1016 0.6 8.5C0.6 6.89837 1.89837 5.6 3.5 5.6C5.10163 5.6 6.4 6.89837 6.4 8.5Z"
      fill={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      stroke={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isPlanetsHovered ? '1.6' : '1.2'}
    />
    <path
      d="M30.4 15C30.4 22.9529 23.9529 29.4 16 29.4C8.0471 29.4 1.6 22.9529 1.6 15C1.6 7.0471 8.0471 0.600001 16 0.600002C23.9529 0.600002 30.4 7.0471 30.4 15Z"
      stroke={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isPlanetsHovered ? '1.6' : '1.2'}
    />
    <path
      d="M24.4 15C24.4 19.6392 20.6392 23.4 16 23.4C11.3608 23.4 7.6 19.6392 7.6 15C7.6 10.3608 11.3608 6.6 16 6.6C20.6392 6.6 24.4 10.3608 24.4 15Z"
      stroke={isPlanetsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isPlanetsHovered ? '1.6' : '1.2'}
    />
  </svg>
);

export const DashboardIcon = ({
  isDashboardHovered
}: {
  isDashboardHovered: any;
}) => (
  <svg width="22" height="20" viewBox="0 0 22 20">
    <title>dashboard</title>
    <path
      d="M1 18.9999H0C0 19.5522 0.447715 19.9999 1 19.9999L1 18.9999ZM1.1211 9.48908L0.227837 9.03956H0.227837L1.1211 9.48908ZM1.60655 8.99757L2.06503 9.88628H2.06503L1.60655 8.99757ZM21 19L21 20C21.2652 20 21.5196 19.8946 21.7071 19.7071C21.8946 19.5196 22 19.2652 22 19H21ZM20.8785 6.1141L19.9852 6.56363L19.9852 6.56363L20.8785 6.1141ZM20.3942 5.62259L19.9357 6.5113L19.9357 6.5113L20.3942 5.62259ZM7.78777 1.61413L8.68104 2.06366L8.68104 2.06366L7.78777 1.61413ZM8.27322 1.12262L7.81474 0.23391V0.23391L8.27322 1.12262ZM14.2118 1.61413L13.3185 2.06366L13.3185 2.06366L14.2118 1.61413ZM13.7269 1.12262L14.1854 0.23391L14.1854 0.23391L13.7269 1.12262ZM6.66667 8.87495V18.9999H8.66667V8.87495H6.66667ZM7.66667 17.9999H1V19.9999H7.66667V17.9999ZM2 18.9999V10.6751H0V18.9999H2ZM2.77734 9.87495H7.66667V7.87495H2.77734V9.87495ZM2 10.6751C2 10.3437 2.00076 10.1546 2.0119 10.0164C2.02213 9.88958 2.03606 9.89551 2.01437 9.93861L0.227837 9.03956C0.0850438 9.32331 0.0384178 9.60719 0.018376 9.85563C-0.000758171 10.0928 0 10.3763 0 10.6751H2ZM2.77734 7.87495C2.48292 7.87495 2.20126 7.87415 1.96525 7.89369C1.7171 7.91422 1.4324 7.96219 1.14808 8.10886L2.06503 9.88628C2.01839 9.91034 2.00794 9.89699 2.1302 9.88687C2.26459 9.87575 2.44949 9.87495 2.77734 9.87495V7.87495ZM2.01437 9.93861C2.02672 9.91407 2.0451 9.89656 2.06503 9.88628L1.14808 8.10886C0.749869 8.3143 0.428539 8.64074 0.227837 9.03956L2.01437 9.93861ZM20 7.30007V19H22V7.30007H20ZM21 18L14.3334 17.9999L14.3333 19.9999L21 20L21 18ZM15.3333 18.9999V5.49997H13.3333V18.9999H15.3333ZM14.3333 6.49997H19.2222V4.49997H14.3333V6.49997ZM22 7.30007C22 7.00098 22.0007 6.71752 21.9814 6.48009C21.9612 6.23146 21.9143 5.94793 21.7717 5.66458L19.9852 6.56363C19.9637 6.52093 19.9776 6.51535 19.9879 6.64203C19.9991 6.77991 20 6.96911 20 7.30007H22ZM19.2222 6.49997C19.55 6.49997 19.7353 6.50077 19.8701 6.5119C19.9931 6.52206 19.9827 6.53551 19.9357 6.5113L20.8527 4.73388C20.5681 4.58705 20.2828 4.53919 20.0348 4.5187C19.7986 4.49918 19.5167 4.49997 19.2222 4.49997V6.49997ZM21.7717 5.66458C21.5722 5.26801 21.2531 4.94046 20.8527 4.73388L19.9357 6.5113C19.9534 6.52044 19.9717 6.53684 19.9852 6.56363L21.7717 5.66458ZM13.3333 2.8001V5.49997H15.3333V2.8001H13.3333ZM14.3333 17.9999H7.66667V19.9999H14.3333V17.9999ZM8.66667 8.87495V2.8001H6.66667V8.87495H8.66667ZM9.44401 2H12.5551V0H9.44401V2ZM8.66667 2.8001C8.66667 2.46878 8.66743 2.27961 8.67857 2.1415C8.6888 2.01463 8.70273 2.02056 8.68104 2.06366L6.8945 1.16461C6.75171 1.44835 6.70508 1.73224 6.68504 1.98068C6.66591 2.21787 6.66667 2.50136 6.66667 2.8001H8.66667ZM9.44401 0C9.14959 0 8.86793 -0.000797868 8.63191 0.0187341C8.38377 0.0392702 8.09906 0.087233 7.81474 0.23391L8.7317 2.01132C8.68506 2.03538 8.67461 2.02204 8.79687 2.01192C8.93126 2.0008 9.11615 2 9.44401 2V0ZM8.68104 2.06366C8.69339 2.03912 8.71177 2.02161 8.7317 2.01132L7.81474 0.23391C7.41654 0.439343 7.09521 0.765784 6.8945 1.16461L8.68104 2.06366ZM15.3333 2.8001C15.3333 2.50101 15.334 2.21754 15.3147 1.98012C15.2945 1.73149 15.2477 1.44795 15.1051 1.16461L13.3185 2.06366C13.2971 2.02096 13.311 2.01538 13.3213 2.14206C13.3325 2.27994 13.3333 2.46914 13.3333 2.8001H15.3333ZM12.5551 2C12.8829 2 13.0681 2.0008 13.2029 2.01193C13.3257 2.02208 13.3153 2.03551 13.2684 2.01132L14.1854 0.23391C13.9008 0.0871056 13.6156 0.0392264 13.3676 0.0187253C13.1314 -0.000795484 12.8496 0 12.5551 0V2ZM15.1051 1.16461C14.9049 0.766781 14.5845 0.439849 14.1854 0.23391L13.2684 2.01132C13.2873 2.0211 13.3057 2.03812 13.3185 2.06366L15.1051 1.16461Z"
      fill={isDashboardHovered ? '#BFC0C1' : '#525456'}
    />
  </svg>
);

export const ChartIcon = ({ isChartHovered }: { isChartHovered: any }) => (
  <svg width="25" height="21" viewBox="0 0 25 21">
    <title>chart</title>
    <path
      d="M2 1C2 0.447715 1.55228 0 1 0C0.447715 0 0 0.447715 0 1H2ZM2.39506 19.7242L1.94421 20.6168H1.94421L2.39506 19.7242ZM1.27854 18.6163L0.389141 19.0734L1.27854 18.6163ZM24.655 4.28875C25.0722 3.92686 25.117 3.29529 24.7551 2.87809C24.3932 2.46088 23.7617 2.41604 23.3445 2.77792L24.655 4.28875ZM16.5303 10.0123L15.8751 9.25687L16.5303 10.0123ZM5.92373 9.59948L5.30139 8.81673C5.29651 8.82062 5.29166 8.82455 5.28685 8.82852L5.92373 9.59948ZM9.48889 8.42064L9.10856 9.34549H9.10856L9.48889 8.42064ZM5.9278 9.59624L6.55014 10.379C6.55503 10.3751 6.55988 10.3712 6.56469 10.3672L5.9278 9.59624ZM7.74857 8.34209L7.45295 7.38678L7.45295 7.38678L7.74857 8.34209ZM14.6985 11.3367L15.0109 12.2867H15.0109L14.6985 11.3367ZM11.1994 9.8443L11.9034 9.13411V9.13411L11.1994 9.8443ZM12.9294 11.2794L13.3039 10.3522H13.3039L12.9294 11.2794ZM24 21C24.5523 21 25 20.5523 25 20C25 19.4477 24.5523 19 24 19V21ZM2 15.9467V13.667H0V15.9467H2ZM2 13.667V1H0V13.667H2ZM5.0849 19C4.35433 19 3.86575 18.9992 3.48986 18.9688C3.12533 18.9393 2.95526 18.8868 2.84591 18.8316L1.94421 20.6168C2.38098 20.8374 2.84162 20.9228 3.32837 20.9623C3.80375 21.0008 4.38703 21 5.0849 21V19ZM0 15.9467C0 16.6394 -0.000791788 17.2195 0.0381982 17.6925C0.0781771 18.1774 0.164973 18.6373 0.389141 19.0734L2.16793 18.1591C2.11356 18.0534 2.06109 17.8878 2.03144 17.5281C2.00079 17.1564 2 16.6727 2 15.9467H0ZM2.84591 18.8316C2.55338 18.6838 2.31632 18.4478 2.16793 18.1591L0.389141 19.0734C0.730768 19.7381 1.27503 20.2787 1.94421 20.6168L2.84591 18.8316ZM23.3445 2.77792L15.8751 9.25687L17.1856 10.7677L24.655 4.28875L23.3445 2.77792ZM5.28685 8.82852L0.363114 12.896L1.63689 14.4379L6.56062 10.3704L5.28685 8.82852ZM11.8952 9.12594C11.4938 8.7281 11.1572 8.39359 10.8607 8.13782C10.5562 7.87515 10.2431 7.64954 9.86923 7.49579L9.10856 9.34549C9.20355 9.38455 9.33047 9.45913 9.55432 9.65222C9.78615 9.85221 10.0662 10.129 10.4871 10.5463L11.8952 9.12594ZM6.54607 10.3822L6.55014 10.379L5.30547 8.81349L5.30139 8.81673L6.54607 10.3822ZM6.56469 10.3672C7.02066 9.99052 7.32414 9.74054 7.57283 9.56252C7.81301 9.3906 7.94613 9.32774 8.04419 9.29739L7.45295 7.38678C7.06716 7.50617 6.73525 7.70248 6.40869 7.93624C6.09063 8.16392 5.72565 8.46615 5.29092 8.82528L6.56469 10.3672ZM9.86923 7.49579C9.10143 7.18004 8.24674 7.14114 7.45295 7.38678L8.04419 9.2974C8.39354 9.18929 8.77022 9.20635 9.10856 9.34549L9.86923 7.49579ZM15.8751 9.25687C15.4174 9.65386 15.1124 9.91752 14.8621 10.1055C14.6201 10.2872 14.4854 10.3541 14.3862 10.3868L15.0109 12.2867C15.4015 12.1583 15.7354 11.9509 16.0632 11.7047C16.3827 11.4647 16.7487 11.1467 17.1856 10.7677L15.8751 9.25687ZM10.4871 10.5463L10.4954 10.5545L11.9034 9.13411L11.8952 9.12594L10.4871 10.5463ZM10.4954 10.5545C10.9029 10.9585 11.245 11.2984 11.5464 11.5579C11.8557 11.8242 12.1743 12.053 12.555 12.2067L13.3039 10.3522C13.2081 10.3135 13.0793 10.2386 12.8514 10.0423C12.6156 9.83931 12.3308 9.55785 11.9034 9.13411L10.4954 10.5545ZM14.3862 10.3868C14.0315 10.5034 13.6472 10.4909 13.3039 10.3522L12.555 12.2067C13.3391 12.5233 14.21 12.55 15.0109 12.2867L14.3862 10.3868ZM24 19H5.0849V21H24V19Z"
      fill={isChartHovered ? '#BFC0C1' : '#525456'}
    />
  </svg>
);

export const SettingsIcon = ({
  isSettingsHovered
}: {
  isSettingsHovered: any;
}) => (
  <svg
    width="30"
    height="28"
    viewBox="0 0 30 28"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <title>Settings</title>
    <path
      d="M26.6944 9.75709L26.1815 9.47617C26.1019 9.43254 26.0627 9.41066 26.0243 9.38797C25.6418 9.1624 25.3194 8.85074 25.0842 8.47787C25.0605 8.44035 25.0382 8.401 24.9926 8.32324C24.947 8.24558 24.9239 8.20622 24.9027 8.16727C24.6917 7.77935 24.5776 7.34704 24.5707 6.90704C24.57 6.8628 24.5702 6.81761 24.5717 6.72775L24.5818 6.14135C24.5978 5.20295 24.6058 4.7323 24.4719 4.30991C24.3529 3.93473 24.1539 3.58915 23.8881 3.29589C23.5876 2.9644 23.1718 2.7279 22.3392 2.25551L21.6476 1.86312C20.8173 1.39205 20.402 1.15643 19.9612 1.0666C19.5712 0.987138 19.1687 0.990821 18.7802 1.0767C18.3416 1.17364 17.9315 1.4154 17.1118 1.89864L17.1072 1.90083L16.6116 2.19297C16.5333 2.23916 16.4936 2.26245 16.4543 2.28394C16.0646 2.49729 15.6295 2.61526 15.1838 2.62934C15.1389 2.63076 15.0932 2.63076 15.0018 2.63076C14.911 2.63076 14.8634 2.63076 14.8185 2.62934C14.3719 2.6152 13.9359 2.49659 13.5455 2.28236C13.5062 2.26077 13.4673 2.2373 13.3888 2.19089L12.89 1.89612C12.0647 1.4083 11.6515 1.16402 11.2105 1.0666C10.8203 0.98042 10.4165 0.978035 10.0251 1.05853C9.58317 1.14941 9.16778 1.38677 8.337 1.86151L8.33331 1.86312L7.65031 2.25341L7.64275 2.25796C6.81945 2.72842 6.40681 2.96421 6.10889 3.29436C5.84453 3.58732 5.64692 3.93235 5.52865 4.30654C5.39496 4.72951 5.40208 5.20117 5.4182 6.14399L5.4282 6.72956C5.42972 6.81824 5.43235 6.8623 5.43169 6.90591C5.42506 7.34682 5.30941 7.78 5.09777 8.16861C5.07684 8.20704 5.05429 8.24548 5.00925 8.32225C4.96418 8.39907 4.94235 8.43727 4.91898 8.47434C4.68267 8.8492 4.35883 9.16268 3.97395 9.38864C3.93588 9.41099 3.89576 9.43248 3.81693 9.4755L3.31054 9.75179C2.46802 10.2115 2.04686 10.4415 1.7404 10.7689C1.46929 11.0585 1.26449 11.402 1.13947 11.7762C0.998155 12.1991 0.998274 12.6733 1.00046 13.6217L1.00225 14.3968C1.00442 15.3389 1.0074 15.8096 1.14904 16.2296C1.27434 16.6012 1.47765 16.9427 1.74724 17.2306C2.05196 17.556 2.46894 17.7846 3.30507 18.2426L3.80694 18.5175C3.89235 18.5642 3.93533 18.5873 3.97652 18.6118C4.35791 18.8379 4.67921 19.1505 4.91351 19.5232C4.93882 19.5635 4.96312 19.6053 5.0117 19.6888C5.05969 19.7714 5.08425 19.8127 5.10644 19.854C5.31186 20.2369 5.42185 20.6624 5.42934 21.0954C5.43015 21.1422 5.42946 21.1895 5.42783 21.2846L5.4182 21.8465C5.40197 22.7926 5.39491 23.2661 5.52938 23.6903C5.64835 24.0655 5.84719 24.411 6.113 24.7043C6.41345 25.0358 6.82997 25.2721 7.66262 25.7445L8.35408 26.1368C9.18439 26.6079 9.5994 26.8433 10.0402 26.9331C10.4302 27.0125 10.8329 27.0095 11.2214 26.9236C11.6606 26.8265 12.0721 26.5839 12.8942 26.0993L13.3897 25.8072C13.4681 25.7609 13.5078 25.7378 13.5471 25.7163C13.9368 25.5029 14.3715 25.3843 14.8172 25.3702C14.8621 25.3688 14.9078 25.3688 14.9991 25.3688C15.0907 25.3688 15.1364 25.3688 15.1814 25.3703C15.628 25.3844 16.0653 25.5034 16.4557 25.7176C16.49 25.7364 16.5244 25.7568 16.5849 25.7926L17.1117 26.1039C17.9371 26.5918 18.3495 26.8354 18.7905 26.9328C19.1807 27.019 19.5848 27.0225 19.9762 26.942C20.418 26.8512 20.8342 26.6133 21.6646 26.1388L22.3578 25.7427C23.1817 25.2719 23.5948 25.0359 23.8928 24.7056C24.1571 24.4127 24.355 24.0678 24.4733 23.6936C24.606 23.2737 24.598 22.8057 24.5821 21.8765L24.5717 21.2704C24.5702 21.1818 24.57 21.1376 24.5707 21.094C24.5773 20.6531 24.6911 20.2196 24.9027 19.831C24.9236 19.7927 24.9464 19.7539 24.9912 19.6774C25.0363 19.6006 25.0596 19.5623 25.083 19.5252C25.3193 19.1504 25.6435 18.8366 26.0284 18.6107C26.066 18.5886 26.1047 18.5675 26.1816 18.5255L26.1843 18.5243L26.6907 18.248C27.5332 17.7883 27.9552 17.558 28.2616 17.2306C28.5327 16.941 28.7373 16.5979 28.8623 16.2238C29.0028 15.8034 29.0017 15.3319 28.9995 14.3946L28.9977 13.6028C28.9955 12.6608 28.9943 12.1902 28.8527 11.7701C28.7274 11.3985 28.523 11.057 28.2534 10.7691C27.9489 10.444 27.5314 10.2153 26.6969 9.75827L26.6944 9.75709Z"
      stroke={isSettingsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isSettingsHovered ? '2.5' : '2'}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M9.39826 14.0001C9.39826 17.0463 11.9064 19.5158 15.0004 19.5158C18.0944 19.5158 20.6026 17.0463 20.6026 14.0001C20.6026 10.9539 18.0944 8.48439 15.0004 8.48439C11.9064 8.48439 9.39826 10.9539 9.39826 14.0001Z"
      stroke={isSettingsHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isSettingsHovered ? '2.5' : '2'}
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const MenuIcon = ({ isOpen }: { isOpen: boolean }) => (
  <svg
    width="28"
    height="28"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    aria-labelledby="menuIconTitle"
  >
    <title id="menuIconTitle">{isOpen ? 'Close Menu' : 'Open Menu'}</title>
    {isOpen ? (
      // Close icon (X)
      <>
        <line x1="18" y1="6" x2="6" y2="18" />
        <line x1="6" y1="6" x2="18" y2="18" />
      </>
    ) : (
      // Open icon (Three lines with slower expanding animation)
      <>
        <line x1="3" y1="12" x2="21" y2="12" />
        <line x1="3" y1="6" x2="21" y2="6">
          <animate
            attributeName="x1"
            values="3;6;3"
            dur="3s"
            repeatCount="indefinite"
          />
          <animate
            attributeName="x2"
            values="21;18;21"
            dur="3s"
            repeatCount="indefinite"
          />
        </line>
        <line x1="3" y1="18" x2="21" y2="18">
          <animate
            attributeName="x1"
            values="3;6;3"
            dur="3s"
            repeatCount="indefinite"
          />
          <animate
            attributeName="x2"
            values="21;18;21"
            dur="3s"
            repeatCount="indefinite"
          />
        </line>
      </>
    )}
  </svg>
);

export const CondensedIcon = ({
  isCondensedHovered
}: {
  isCondensedHovered: boolean;
}) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 17 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <rect
      x="0.25"
      y="0.1"
      width="16.5"
      height="4"
      stroke={isCondensedHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isCondensedHovered ? '1' : '1'}
    />
    <rect
      x="0.25"
      y="6"
      width="16.5"
      height="4"
      stroke={isCondensedHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isCondensedHovered ? '1' : '1'}
    />
    <rect
      x="0.25"
      y="12"
      width="16.5"
      height="4"
      stroke={isCondensedHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isCondensedHovered ? '1' : '1'}
    />
  </svg>
);

export const DetailedIcon = ({
  isDetailedHovered
}: {
  isDetailedHovered: boolean;
}) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 17 17"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <rect
      x="0.25"
      y="0.25"
      width="16.5"
      height="7.15"
      stroke={isDetailedHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isDetailedHovered ? '1.6' : '1'}
    />
    <rect
      x="0.25"
      y="9.59998"
      width="16.5"
      height="7.15"
      stroke={isDetailedHovered ? '#BFC0C1' : '#525456'}
      strokeWidth={isDetailedHovered ? '1.6' : '1'}
    />
  </svg>
);

export const MinusIcon: React.FC = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className="h-5 w-5"
  >
    <line x1="5" y1="12" x2="19" y2="12"></line>
  </svg>
);

export const PlusIcon: React.FC = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className="h-5 w-5"
  >
    <line x1="12" y1="5" x2="12" y2="19"></line>
    <line x1="5" y1="12" x2="19" y2="12"></line>
  </svg>
);

export const ScaledIcon: React.FC<{ className: string }> = ({ className }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className={className}
  >
    <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
    <line x1="9" y1="3" x2="9" y2="21"></line>
    <line x1="15" y1="3" x2="15" y2="21"></line>
    <line x1="21" y1="9" x2="3" y2="9"></line>
    <line x1="21" y1="15" x2="3" y2="15"></line>
  </svg>
);

export const EvenIcon: React.FC<{ className: string }> = ({ className }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className={className}
  >
    <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
    <line x1="9" y1="9" x2="15" y2="15"></line>
    <line x1="15" y1="9" x2="9" y2="15"></line>
  </svg>
);

export const OscillatorIcon: React.FC<{ className: string }> = ({
  className
}) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className={className}
  >
    <path d="M2 12h4c1.1 0 2-.9 2-2s.9-2 2-2 2 .9 2 2 .9 2 2 2 2-.9 2-2 .9-2 2-2 2 .9 2 2 .9 2 2 2h4" />
  </svg>
);

export const ClockIcon: React.FC = () => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className="h-5 w-5"
  >
    <circle cx="12" cy="12" r="10" />
    <polyline points="12 6 12 12 16 14" />
  </svg>
);

export const TrendIcon: React.FC<{ trend: 'up' | 'down' }> = ({ trend }) => {
  const color = trend === 'up' ? 'text-teal-500' : 'text-red-500';
  return (
    <svg
      className={`h-4 w-4 ${color}`}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      {trend === 'up' ? (
        <polyline points="23 6 13.5 15.5 8.5 10.5 1 18" />
      ) : (
        <polyline points="23 18 13.5 8.5 8.5 13.5 1 6" />
      )}
      <polyline
        points={trend === 'up' ? '17 6 23 6 23 12' : '17 18 23 18 23 12'}
      />
    </svg>
  );
};

export const BellIcon: React.FC = () => (
  <svg
    width="17"
    height="19"
    viewBox="0 0 17 19"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10.7059 14.4211V15.3158C10.7059 16.7982 9.52075 18 8.05882 18C6.59689 18 5.41176 16.7982 5.41176 15.3158V14.4211M10.7059 14.4211L5.41176 14.4211M10.7059 14.4211H14.2353C14.7226 14.4211 15.1176 14.0205 15.1176 13.5263V13.0021C15.1176 12.7648 15.0246 12.5373 14.8591 12.3694L14.4085 11.9125C14.2976 11.8 14.2353 11.6473 14.2353 11.4883V8.15789C14.2353 8.00003 14.2297 7.84344 14.2181 7.68914M5.41176 14.4211L1.88235 14.4212C1.39505 14.4212 1 14.0203 1 13.5261V13.0021C1 12.7648 1.09303 12.5376 1.2585 12.3697L1.70916 11.9121C1.82005 11.7996 1.88235 11.6476 1.88235 11.4885V8.15788C1.88235 4.69885 4.64765 1.89474 8.05882 1.89474C8.68671 1.89474 9.29271 1.98974 9.86362 2.16635M14.2181 7.68914C15.2825 7.07285 16 5.91086 16 4.57895C16 2.60235 14.4198 1 12.4706 1C11.438 1 10.509 1.44963 9.86362 2.16635M14.2181 7.68914C13.7028 7.98744 13.1063 8.15789 12.4706 8.15789C10.5213 8.15789 8.94118 6.55555 8.94118 4.57895C8.94118 3.6494 9.29064 2.80263 9.86362 2.16635M14.2181 7.68914C14.2181 7.68913 14.2181 7.68914 14.2181 7.68914ZM9.86362 2.16635C9.86403 2.16648 9.86444 2.16661 9.86486 2.16673"
      stroke="white"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);
